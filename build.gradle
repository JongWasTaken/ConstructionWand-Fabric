plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://smto.dev/maven/releases' }
	maven { url 'https://maven.wispforest.io' }
	maven { url "https://cursemaven.com" }
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.architectury.dev/" }
	maven { url 'https://maven.nucleoid.xyz' }
}

loom {
    //splitEnvironmentSourceSets()
	accessWidenerPath = file("src/main/resources/constructionwand.accesswidener")
	mods {
		"constructionwand" {
			sourceSet sourceSets.main
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	include implementation("dev.smto:simpleconfig:2.4.3")
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// recipe viewers
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"

	// polymer stuff
	modCompileOnly "eu.pb4:polymer-core:${project.polymer_version}"
	modCompileOnly "eu.pb4:polymer-resource-pack:${project.polymer_version}"
	modCompileOnly "eu.pb4:sgui:${project.sgui_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand(Map<String, Object>.of(
				"version", project.version.toString().split("\\+")[0],
				"loader_version", loader_version,
				"minecraft_version", minecraft_version,
				"fabric_version", fabric_version.toString().split("\\+")[0],
				"rei_version", rei_version
		))
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}